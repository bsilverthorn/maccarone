{
    "tagged_input_to_tagged_output": {
        "inputs_hash": "204d447bb2a6752254bea6d4c7f7b52697a40b0d2c25729aa77938d06e1eb57c",
        "value": "<completed id=\"0\">\nwith open(mn_path, \"r\") as f:\n    mn_source = f.read()\n</>\n<completed id=\"1\">\nimport re\npy_path = re.sub(f\"{suffix}$\", \".py\", mn_path)\n</>\n<completed id=\"2\">\nwith open(py_path, \"w\") as f:\n    f.write(py_source)\n</>\n<completed id=\"3\">\nfor mn_file in mn_files:\n    preprocess(mn_file, print_, write, suffix)\n</>\n<completed id=\"4\">\nimport argparse\nparser = argparse.ArgumentParser()\nparser.add_argument(\"path\", help=\"Path to the file or directory containing Maccarone snippets\")\nparser.add_argument(\"--print\", dest=\"print_\", action=\"store_true\", help=\"Print the preprocessed Python source\")\nparser.add_argument(\"--write\", action=\"store_true\", help=\"Write the preprocessed Python source to a file\")\nparser.add_argument(\"--suffix\", default=\".mn.py\", help=\"Suffix for files containing Maccarone snippets (default: .mn.py)\")\nargs = parser.parse_args()\nreturn args\n</>"
    }
}